
const express = require('express')
const app = express()
const bodyParser = require('body-parser')
const mysql = require('mysql')
var passport = require('passport');
var path = require('path');
var flash = require('connect-flash');
var routes = require('./app/routes');

app.use(express.static(__dirname));
app.use('/*', routes);
app.use(express.logger('dev'));
app.use(express.methodOverride());

app.use(express.cookieParser());
app.use(express.session({ secret: 'SECRET' })); // session secret
app.use(passport.initialize());
app.use(passport.session()); // persistent login sessions
app.use(flash()); // use connect-flash for flash messages stored in session

app.set('views', './app');
app.set('view engine', 'ejs'); // set up ejs for templating
// app.get('/', function(req, res) {
//     console.log('get index');
//     res.sendFile(path.join(__dirname,'index.html'));
// });

require('./config/passport')(passport);

app.use(bodyParser.json());



app.use(function(req, res, next) {
  res.header("Access-Control-Allow-Origin", "*");
  res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
  next();
});

var conn = mysql.createConnection({
    host: 'localhost',//'ec2-52-53-249-123.us-west-1.compute.amazonaws.com',
    //port: '8900',//'3306',
    user: 'root',
    password: 'admin',
    database: 'cmpe272'
});

conn.connect(function(err) {
    if (err) throw err;
    console.log('Connected!');
});

app.post('/create', (req, res) => {
    console.log('create')
    console.log(req.body)
    var values = [
        req.body.lat, req.body.lon,req.body.address, req.body.originalTweet,
        req.body.linkToTweet, new Date(req.body.eventDate), req.body.twitterHandle, req.body.merchantName,
	req.body.merchantLogo, new Date(), req.body.twitterID, req.body.autoGeneratedByNLP
    ]

    console.log(values)

    var sqlm1 = "INSERT INTO events (lat, lon, address, originalTweet, linkToTweet, eventDate, twitterHandle, merchantName, "
    var sqlm2 = "merchantLogo, createdDate, twitterID, autoGeneratedByNLP) VALUES (?,?,?,?,?,?,?,?,?,?,?,?)"
    var sqlm = sqlm1 + sqlm2;

    conn.query(sqlm, values, function(err, result) {
        if(err) throw err;
        console.log('Inserted ' + result.affectedRows + ' row');
    })
})

app.post('/fetch', (req, res) => {
    console.log(req.body)
    Object.keys(req.body).forEach(function(key){
       req.body = JSON.parse(key)
    })
    console.log('req.body after %j', req.body)
   var sql, query, resultJSON = []

  if(req.body.afterEventDate==undefined) {
   if(req.body.twitterHandle==undefined) {
    var sql = 'SELECT * FROM events WHERE lat = ? AND lon = ?';
    var query = [req.body.lat, req.body.lon]
    }
   else {
    var sql = 'SELECT * FROM events WHERE twitterHandle = ?';
    var query = [req.body.twitterHandle]
   }
  }
  else {
   if(req.body.twitterHandle==undefined) {
    var sql = 'SELECT * FROM events WHERE lat = ? AND lon = ? AND eventDate >= ?';
    var query = [req.body.lat, req.body.lon, req.body.afterEventDate]
   }
   else {
    var sql = 'SELECT * FROM events WHERE twitterHandle = ? AND eventDate >= ?';
    var query = [req.body.twitterHandle, req.body.afterEventDate]
   }
  }

 cb(sql, query, function(err,row){
   if (err) throw err
   console.log(row)
   res.send(JSON.stringify(row))
 })

})

 var cb = function(sql, query, callback){
   var resultData = []
   conn.query(sql, query, function(err, rows, fields) {
        if(err)
           return callback(err)
        else
           return callback(null, rows)
   })
 }




app.post('/update', (req, res) => {
    console.log(req.body)
    Object.keys(req.body).forEach(function(key){
       req.body = JSON.parse(key)
    })
    console.log('req.body after ' + req.body)
   var sql = 'UPDATE events SET ? WHERE event_id = ?', query, value = {}

   if(req.body.unlinkTweet=="true") {
    value["linkToTweet"] = ""
   }
   if(req.body.eventDate!=undefined) {
    value["eventDate"] = req.body.eventDate
   }
   if(req.body.lat!=undefined) {
    value["lat"] = req.body.lat
   }
   if(req.body.lon!=undefined) {
    value["lon"] = req.body.lon
   }
   if(req.body.address!=undefined) {
    value["address"] = req.body.address
   }
   console.log(value)

  query = conn.query(sql, [value, req.body.encryptedId])
  query.on('error', function(err) {
      throw err
  })
  query.on('result', function(row) {
      console.log('result ' + row.event_id + ' ' + row.linkToTweet +' '+ row.eventDate +' ' + row.lat +' '+ row.lon +' '+ row.address)
  })

})

require('./app/routes.js')(app, passport); // load our routes and pass in our app and fully configured passport

app.listen(8900, () => console.log('Server running on port 8900'));


